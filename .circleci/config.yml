version: 2.1
executors:
  small:
    working_directory: ~/project
    docker:
      - image: 'circleci/node:12'

jobs:
  dependencies:
    executor: small
    steps:
      - checkout
      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}
            - yarn-cache-v1-
      - run:
          name: Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save yarn cache
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
  test:
    executor: small
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Test
          command: yarn test
  lint:
    executor: small
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Lint
          command: yarn lint
  build:
    executor: small
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: ~/project
          paths:
            - dist
  docs:
    executor: small
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Generate documentation
          command: yarn docs
      - run:
          name: Set up git config
          command: |
            git config user.email "williamareynolds@icloud.com"
            git config user.name "William Reynolds"
      - run:
          name: Publish docs to github pages
          command: yarn docs.publish
  release:
    executor: small
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Release
          command: echo 'yarn semantic-release || true'

workflows:
  version: 2
  OnPush:
    jobs:
      - dependencies:
          filters:
            branches:
              ignore: gh-pages
      - test:
          requires:
            - dependencies
          filters:
            branches:
              ignore: gh-pages
      - lint:
          requires:
            - dependencies
          filters:
            branches:
              ignore: gh-pages
      - build:
          requires:
            - dependencies
          filters:
            branches:
              ignore: gh-pages
      - docs:
          requires:
            - build
          filters:
            branches:
              only: master
      - release:
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              only: master
